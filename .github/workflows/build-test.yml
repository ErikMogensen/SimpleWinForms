name: build-test
  
on: 
  workflow_call:
    inputs:
      release-version:
        required: true
        type: string
  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: .\src
  BUILD_CONFIGURATION: Release
  PLATFORM: Any CPU

jobs:
  build_test_publish:
    name: Build and run unit tests
    runs-on: windows-2022

    steps:     
    
    #- name: Download and install nunit console runner v3.15.2
    #  run: |
    #    Invoke-WebRequest -Uri https://github.com/nunit/nunit-console/releases/download/3.15.2/NUnit.Console-3.15.2.msi -Outfile NUnit.Console-3.15.2.msi
    #    Start-Process -FilePath "msiexec.exe"  -ArgumentList "/quiet", "/i", """NUnit.Console-3.15.2.msi"""

    - name: Git configuration
      run: git config --global core.autocrlf false

    - uses: actions/checkout@v3

    - name: Add MSBuild for VS 2022 to PATH 
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x86
        vs-version: '[17.2,18.0)'

    - name: Dump env
      run: env | sort
   
    - name: Dump GitHub context
      env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    #- name: Restore NuGet packages
    #  working-directory: ${{env.GITHUB_WORKSPACE}}
    #  run: nuget restore $env:SOLUTION_FILE_PATH

    - name: Show version
      run: echo "inputs.release-version is ${{ inputs.release-version }}"

    - name: See what we got
      run: Get-childitem -path $env:GITHUB_WORKSPACE -recurse

    - name: Show value
      env:
        Version: ${{ inputs.release-version }}
      run: |
        echo "env version is ${{env.Version}}"
        echo "env version is $env:version"

    - name: Show AssemblyInfo.cs - pre
      run: |
         Write-host "Showing off"
         get-content $env:GITHUB_WORKSPACE\src\SimpleWinForms\Properties\AssemblyInfo.cs

    - name: Set versions on .NET Framework assemblies
      env:
        Version: ${{ inputs.release-version }}
      run: |
        $fileName = "$env:GITHUB_WORKSPACE\src\SimpleWinForms\Properties\AssemblyInfo.cs"
        .\SetVersion -FileName $fileName -PropertyName 'AssemblyVersion' -Version ${{env.Version}}
        .\SetVersion -FileName $fileName -PropertyName 'AssemblyFileVersion' -Version ${{env.Version}}


    - name: Show AssemblyInfo.cs - post
      run: |
         Write-host "Showing off"
         get-content $env:GITHUB_WORKSPACE\src\SimpleWinForms\Properties\AssemblyInfo.cs

    - name: Build
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}},FileVersion=${{env.Version}},Version=${{env.Version}} ${{env.SOLUTION_FILE_PATH}}
        Write-host "And the content is..."
        get-content $env:GITHUB_WORKSPACE\src\SimpleWinForms\Properties\AssemblyInfo.cs
      env:
        Version: ${{ inputs.release-version }}

    # - name: See what we got
    #   run: dir  $env:GITHUB_WORKSPACE\BothFrameworks.Tests

    #- name: Run tests
    #  run: |
    #    $process = Start-Process -FilePath "C:\Program Files (x86)\NUnit.org\nunit-console\nunit3-console.exe"  -ArgumentList "$env:GITHUB_WORKSPACE\BothFrameworks.Tests\BothFrameworks.Tests.csproj", "--config=${{env.BUILD_CONFIGURATION}}" -PassThru
    #    Wait-Process -InputObject $process
    #    Get-Content -Path .\TestResult.xml
    #    if ($process.ExitCode -ne 0) {throw "Unit tests failed (exit code = $($process.ExitCode))" }


    - name: See what we got on disk
      run: Get-childitem -path $env:GITHUB_WORKSPACE -recurse

    - name: Cache build output
      uses: actions/cache@v3.0.5
      with:
        path: src/SimpleWinForms/bin/Release
        key: cached-output-${{ github.sha }}

    - name: show build number works
      run: echo "GITHUB_RUN_ID is $env:GITHUB_RUN_ID"
      
    - name: show build number 2 - not works
      run: echo "GITHUB_RUN_ID is ${{env.GITHUB_RUN_ID}}"

    - name: show build just 
      run: echo "BUILD_CONFIGURATION is $BUILD_CONFIGURATION"

    - name: show build -wroks
      run: echo "BUILD_CONFIGURATION is ${{env.BUILD_CONFIGURATION}}"
      
    - name: Show workspace
      run: echo "GITHUB_WORKSPACE using env $env:GITHUB_WORKSPACE"

  
